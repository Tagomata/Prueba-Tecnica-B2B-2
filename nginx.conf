# Define el usuario que ejecutará el proceso de NGINX
user nginx;

# Configura el número de procesos de trabajo, generalmente se establece al número de núcleos de CPU
worker_processes auto;

# Configuración de eventos para optimizar el rendimiento
events {
    # Número máximo de conexiones simultáneas que cada proceso de trabajo puede manejar
    worker_connections 1024;
    # Permite aceptar múltiples conexiones en un solo evento de notificación
    multi_accept on;
    # Usa el método epoll para manejar conexiones (más eficiente en sistemas Linux)
    use epoll;
}

http {
    # Configuraciones básicas
    # Permite el uso de sendfile() para transferir archivos más eficientemente
    sendfile on;
    # Optimiza el envío de paquetes TCP
    tcp_nopush on;
    # Envía encabezados en un paquete separado para una respuesta más rápida
    tcp_nodelay on;
    # Tiempo que una conexión keep-alive permanecerá abierta
    keepalive_timeout 65;
    # Tamaño máximo de la tabla hash para tipos MIME
    types_hash_max_size 2048;

    # Configuración de caché para archivos estáticos
    # Almacena en caché hasta 1000 archivos abiertos, cerrándolos después de 20 segundos de inactividad
    open_file_cache max=1000 inactive=20s;
    # Verifica la validez de los archivos en caché cada 30 segundos
    open_file_cache_valid 30s;
    # Mantiene un archivo en caché si se ha usado al menos 2 veces
    open_file_cache_min_uses 2;
    # Almacena en caché los errores de acceso a archivos
    open_file_cache_errors on;

    # Configuración de Gzip para compresión
    # Activa la compresión Gzip
    gzip on;
    # Agrega el encabezado "Vary: Accept-Encoding"
    gzip_vary on;
    # Comprime las respuestas para cualquier solicitud proxy
    gzip_proxied any;
    # Nivel de compresión (1-9, 9 es la máxima compresión pero usa más CPU)
    gzip_comp_level 6;
    # Tipos de archivos a comprimir
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Configuración del servidor
    server {
        # Escucha en el puerto 80 (HTTP)
        listen 80;
        # Escucha en el puerto 443 (HTTPS) con soporte para HTTP/2
        listen 443 ssl http2;
        # Nombre del servidor
        server_name example.com;

        # Configuración SSL (asegúrate de reemplazar con tus propios certificados)
        ssl_certificate /path/to/your/certificate.crt;
        ssl_certificate_key /path/to/your/certificate.key;

        # Optimizaciones SSL
        # Configura una caché compartida de sesiones SSL de 10MB
        ssl_session_cache shared:SSL:10m;
        # Tiempo de expiración de las sesiones SSL
        ssl_session_timeout 10m;
        # Protocolos SSL/TLS permitidos
        ssl_protocols TLSv1.2 TLSv1.3;
        # Prefiere los cifrados del servidor sobre los del cliente
        ssl_prefer_server_ciphers on;

        # Configuración de caché para imágenes y CSS
        location ~* \.(jpg|jpeg|png|gif|ico|css)$ {
            # Establece el tiempo de expiración a 30 días
            expires 30d;
            # Agrega un encabezado de control de caché
            add_header Cache-Control "public, no-transform";
        }

        # Configuración para archivos HTML y XML
        location ~* \.(html|xml)$ {
            # Establece el tiempo de expiración a 1 hora
            expires 1h;
            # Agrega un encabezado de control de caché
            add_header Cache-Control "public";
        }

        # Otras configuraciones del servidor...
    }
}
